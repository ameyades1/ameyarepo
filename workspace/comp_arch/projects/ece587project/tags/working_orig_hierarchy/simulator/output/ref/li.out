XLISP version 1.6, Copyright (c) 1985, by David Betz
; loading "au.lsp"
; loading "boyer.lsp"
(IMPLIES (AND (IMPLIES (F (PLUS (PLUS A B) (PLUS C (ZERO)))) (F (TIMES (TIMES A B) (PLUS C D)))) (IMPLIES (F (TIMES (TIMES A B) (PLUS C D))) (F (REVERSE (APPEND (APPEND A B) (NIL)))))) (IMPLIES (F (PLUS (PLUS A B) (PLUS C (ZERO)))) (F (REVERSE (APPEND (APPEND A B) (NIL))))))
NIL
(DONE BOYER-TEST)
; loading "browse.lsp"
(G837 G177 G1090 G617 G661 G749 G628 G56 G826 G408 G1035 G474 G320 G452 G672 G991 G155 G122 G793 G221 G716 G727 G848 G309 G144 G936 G100 G881 G287 G430 G23 G771 G232 G804 G958 G650 G1068 G1057 G463 G276 G1046 G1002 G199 G34 G738 G210 G540 G397 G342 G364 G782 G683 G89 G375 G166 G595 G892 G705 G507 G639 G331 G188 G243 G441 G1013 G1079 G67 G298 G386 G573 G859 G133 G760 G12 G529 G815 G111 G496 G45 G265 G925 G903 G254 G78 G551 G606 G485 G518 G419 G870 G562 G1 G353 G980 G694 G914 G969 G947 G584 G1024)
((*A ?B *B ?B A *A A *B *A) (*A *B *B *A (*A) (*B)) (? ? * (B A) * ? ?))
NIL
(DONE BROWSE)
; loading "ctak.lsp"
7
(DONE CTAK)
; loading "dderiv.lsp"
(+ (* (* 3 X X) (+ (// 0 3) (// 1 X) (// 1 X))) (* (* A X X) (+ (// 0 A) (// 1 X) (// 1 X))) (* (* B X) (+ (// 0 B) (// 1 X))) 0)
(DONE DDERIV-RUN)
; loading "deriv.lsp"
(+ (* (* 3 X X) (+ (/ 0 3) (/ 1 X) (/ 1 X))) (* (* A X X) (+ (/ 0 A) (/ 1 X) (/ 1 X))) (* (* B X) (+ (/ 0 B) (/ 1 X))) 0)
(DONE DERIV-RUN)
; loading "destru0.lsp"
NIL
(DONE DESTRUCTIVE)
; loading "destru1.lsp"
NIL
(DONE DESTRUCTIVE)
; loading "destru2.lsp"
NIL
(DONE DESTRUCTIVE)
; loading "destrum0.lsp"
NIL
(DONE DESTRUCTIVE-MOD)
; loading "destrum1.lsp"
NIL
(DONE DESTRUCTIVE-MOD)
; loading "destrum2.lsp"
NIL
(DONE DESTRUCTIVE-MOD)
; loading "div2.lsp"
(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
NIL
(DONE TESTDIV2-ITER)
(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
NIL
NIL
(DONE TESTDIV2-RECUR)
; loading "puzzle0.lsp"

Puzzle filled(SUCCESS IN 2005)
(DONE PUZZLE)
; loading "puzzle1.lsp"

Puzzle filled(SUCCESS IN 2005)
(DONE PUZZLE)
; loading "tak0.lsp"
7
7
7
7
7
7
7
7
7
7
7
(DONE TAK)
; loading "tak1.lsp"
7
7
7
7
7
7
7
7
7
7
7
(DONE TAK)
; loading "tak2.lsp"
7
7
7
7
7
7
7
7
7
7
7
(DONE TAK)
; loading "takr.lsp"
7
(DONE TAKR)
; loading "triang.lsp"
0
NIL
(DONE TRIANG)
; loading "xit.lsp"
(ALL DONE)
